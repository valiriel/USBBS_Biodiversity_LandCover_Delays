model{

for(n in 1:N){
    
    q0.t2[n] ~ dpois(lambda[n])

################ Main model

    log(lambda[n]) <- a0 + (a1Urban.t2*urban.t2[n] + a2UrbanSquared.t2 * pow(urban.t2[n], 2) +
                            a3Forest.t2*forest.t2[n] + a4ForestSquared.t2 * pow(forest.t2[n], 2) +
                            a5Grassland.t2*grassland.t2[n] + a6GrasslandSquared.t2 * pow(grassland.t2[n], 2) +  
                            a7Cropland.t2*cropland.t2[n] + a8CroplandSquared.t2 * pow(cropland.t2[n], 2) +
                            aWetland.t2*wetland.t2[n] + aWetlandSquared.t2 * pow(wetland.t2[n], 2) +
                            a9UrbanForest.t2*urban.t2[n]*forest.t2[n] +               # interaction urban forest
                            a10UrbanGrassland.t2*urban.t2[n]*grassland.t2[n] +        # interaction urban grassland
                            a11UrbanCropland.t2*urban.t2[n]*cropland.t2[n] +          # interaction urban cropland
                            a12ForestGrassland.t2*forest.t2[n]*grassland.t2[n] +      # interaction forest grassland
                            a13ForestCropland.t2*forest.t2[n]*cropland.t2[n] +        # interaction forest cropland
                            a14GrasslandCropland.t2*grassland.t2[n]*cropland.t2[n] +  # interaction grassland cropland
                            a15WetlandUrban.t2 * wetland.t2[n]*urban.t2[n] +
                            a16WetlandForest.t2 * wetland.t2[n]*forest.t2[n] +
                            a17WetlandGrassland.t2 * wetland.t2[n]*grassland.t2[n] +
                            a18WetlandCropland.t2 * wetland.t2[n]*cropland.t2[n] +
                            aTemperature.t2*tmean.t2[n] + aTemperatureSquared.t2*pow(tmean.t2[n],2))*
                                   (exp((-c.pos.forest*delta.pos.forest[n]) + (-c.neg.forest*delta.neg.forest[n]) +
                                   (-c.pos.urban*delta.pos.urban[n]) + # no negative urban chnage due to no values
                                   (-c.pos.grassland*delta.pos.grassland[n]) + (-c.neg.grassland*delta.neg.grassland[n]) +
                                   (-c.pos.cropland*delta.pos.cropland[n]) + (-c.neg.cropland*delta.neg.cropland[n]) +
                                   (-c.pos.wetland*delta.pos.wetland[n]) + (-c.neg.wetland*delta.neg.wetland[n]) +
                                   (-c.pos.temp*delta.pos.temp[n]) + (-c.neg.temp*delta.neg.temp[n]))) + 
                           (a1Urban.t1*urban.t1[n] + a2UrbanSquared.t1 * pow(urban.t1[n], 2) +
                            a3Forest.t1*forest.t1[n] + a4ForestSquared.t1 * pow(forest.t1[n], 2) +
                            a5Grassland.t1*grassland.t1[n] + a6GrasslandSquared.t1 * pow(grassland.t1[n], 2) +  
                            a7Cropland.t1*cropland.t1[n] + a8CroplandSquared.t1 * pow(cropland.t1[n], 2) +
                            aWetland.t1*wetland.t1[n] + aWetlandSquared.t1 * pow(wetland.t1[n], 2) +
                            a9UrbanForest.t1*urban.t1[n]*forest.t1[n] +               # interaction urban forest
                            a10UrbanGrassland.t1*urban.t1[n]*grassland.t1[n] +        # interaction urban grassland
                            a11UrbanCropland.t1*urban.t1[n]*cropland.t1[n] +          # interaction urban cropland
                            a12ForestGrassland.t1*forest.t1[n]*grassland.t1[n] +      # interaction forest grassland
                            a13ForestCropland.t1*forest.t1[n]*cropland.t1[n] +        # interaction forest cropland
                            a14GrasslandCropland.t1*grassland.t1[n]*cropland.t1[n]+   # interaction grassland cropland
                            a15WetlandUrban.t1 * wetland.t1[n]*urban.t1[n] +
                            a16WetlandForest.t1 * wetland.t1[n]*forest.t1[n] +
                            a17WetlandGrassland.t1 * wetland.t1[n]*grassland.t1[n] +
                            a18WetlandCropland.t1 * wetland.t1[n]*cropland.t1[n] +
                            aTemperature.t1*tmean.t1[n] + aTemperatureSquared.t1*pow(tmean.t1[n],2))*
                              (1 - (exp((-c.pos.forest*delta.pos.forest[n]) + (-c.neg.forest*delta.neg.forest[n]) +
                                   (-c.pos.urban*delta.pos.urban[n]) +
                                   (-c.pos.grassland*delta.pos.grassland[n]) + (-c.neg.grassland*delta.neg.grassland[n]) +
                                   (-c.pos.cropland*delta.pos.cropland[n]) + (-c.neg.cropland*delta.neg.cropland[n]) +
                                   (-c.pos.wetland*delta.pos.wetland[n]) + (-c.neg.wetland*delta.neg.wetland[n]) +
                                   (-c.pos.temp*delta.pos.temp[n]) + (-c.neg.temp*delta.neg.temp[n])))) + # lag term
                            Arouteid[routeid[n]] + OLET[n] +
                            aEven.t1*even.t1[n]

################ log-Likelihood calculation for future WAIC-loo analysis
    
    log.like[n] <- logdensity.pois(q0.t2[n], lambda[n])
    
  }

###############
# Random Effect

for(r in 1:R){
Arouteid[r] ~ dnorm(0, routeid.tau)
}

#####################
for (j in 1:N){
  OLET[j] ~ dnorm(0, tau)
} 

###############
# Priors
  
  c.pos.urban ~ dunif(0, 1)
  c.pos.grassland ~ dunif(0, 1)
    c.neg.grassland ~ dunif(0, 1)
  c.pos.cropland ~ dunif(0, 1)
    c.neg.cropland ~ dunif(0, 1)
  c.pos.forest ~ dunif(0, 1)
    c.neg.forest ~ dunif(0, 1)
  c.pos.wetland ~ dunif(0, 1)
    c.neg.wetland ~ dunif(0, 1)
  c.pos.temp ~ dunif(0,1)
    c.neg.temp ~ dunif(0,1)

a0 ~ dnorm(0, 10^-6)

a1Urban.t2 ~ dnorm(0, 10^-6)
a2UrbanSquared.t2 ~ dnorm(0, 10^-6)
a1Urban.t1 <- a1Urban.t2
a2UrbanSquared.t1 <- a2UrbanSquared.t2

a3Forest.t2 ~ dnorm(0, 10^-6)
a4ForestSquared.t2 ~ dnorm(0, 10^-6)
a3Forest.t1 <- a3Forest.t2
a4ForestSquared.t1 <- a4ForestSquared.t2

a5Grassland.t2 ~ dnorm(0, 10^-6)
a6GrasslandSquared.t2 ~ dnorm(0, 10^-6)
a5Grassland.t1 <- a5Grassland.t2
a6GrasslandSquared.t1 <- a6GrasslandSquared.t2

a7Cropland.t2 ~ dnorm(0, 10^-6)
a8CroplandSquared.t2 ~ dnorm(0, 10^-6)
a7Cropland.t1 <- a7Cropland.t2
a8CroplandSquared.t1 <- a8CroplandSquared.t2

aWetland.t2 ~ dnorm(0, 10^-6)
aWetlandSquared.t2 ~ dnorm(0, 10^-6)
aWetland.t1 <- aWetland.t2
aWetlandSquared.t1 <- aWetlandSquared.t2

a9UrbanForest.t2 ~ dnorm(0, 10^-6)
a9UrbanForest.t1 <- a9UrbanForest.t2
a10UrbanGrassland.t2 ~ dnorm(0, 10^-6)
a10UrbanGrassland.t1 <- a10UrbanGrassland.t2
a11UrbanCropland.t2 ~ dnorm(0, 10^-6)
a11UrbanCropland.t1 <- a11UrbanCropland.t2
a12ForestGrassland.t2 ~ dnorm(0, 10^-6)
a12ForestGrassland.t1 <- a12ForestGrassland.t2
a13ForestCropland.t2 ~ dnorm(0, 10^-6)
a13ForestCropland.t1 <- a13ForestCropland.t2
a14GrasslandCropland.t2 ~ dnorm(0, 10^-6)
a14GrasslandCropland.t1 <- a14GrasslandCropland.t2
a15WetlandUrban.t2 ~ dnorm(0, 10^-6)
a15WetlandUrban.t1 <- a15WetlandUrban.t2
a16WetlandForest.t2 ~ dnorm(0, 10^-6)
a16WetlandForest.t1 <- a16WetlandForest.t2
a17WetlandGrassland.t2 ~ dnorm(0, 10^-6)
a17WetlandGrassland.t1 <- a17WetlandGrassland.t2
a18WetlandCropland.t2 ~ dnorm(0, 10^-6)
a18WetlandCropland.t1 <- a18WetlandCropland.t2

tau ~ dgamma(0.001, 0.001)
routeid.tau ~ dgamma(0.001, 0.001)

aTemperature.t2 ~ dnorm(0, 10^-6)
aTemperatureSquared.t2 ~ dnorm(0, 10^-6)
aTemperature.t1 <- aTemperature.t2
aTemperatureSquared.t1 <- aTemperatureSquared.t2

aEven.t1 ~ dnorm(0, 10^-6) 

}
